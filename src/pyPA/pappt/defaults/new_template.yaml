###### PA INPUT
#### Process Analysis uses model generated Integrated Process and Reaction 
#### Rates (IPR/IRR) to create a conceputually well mixed volume that can
#### be analyzed to conceptually represent physical and chemical evolution.
####
#### There are 5 sections.  Commented options are optional.

###############################################
###### OUTPUT PATH                       ######
###############################################
#### outfile is the path for results
outfile: <path for output file>

###############################################
###### MODEL/MECHANISM IDENTIFICATION    ######
###############################################
#### models supported are cmaq, camx, wrfchem
#### mechanisms supported cbivmech3
#model: cmaq|camx|wrfchem
#mechanism: cbivmech3|more-to-come

###############################################
###### PA META WRAPPERS                  ######
###############################################
#### Data that is needed by pyPA often has different
#### names, forms, and or meta data conventions.  pyPA
#### provides meta wrappers that will help you work with
#### specific models.  Please choose the wrapper that goes
#### with the model you are using.  If your model is not 
#### provided, try pafile_master. pafile_master is the most
#### generic.
metawrapper: camx_pa_master|cmaq_pa_master|wrfchem_pa_master|pafile_master

###############################################
###### INPUT FILES AND READERS           ######
###############################################
#### pyPA uses integrated reaction rate, integrated
#### process rate, instantaneous concentration data,
#### and meteorological data from files.  The variables
#### may be in any number of files with any number of
#### formats that each have their own readers.  Provide
#### the path for each file and the name of its reader
#### function.
####
#### READER FUNCTIONS BY MODEL
#### CAMx:
####  ipr: Integrated process rate file reader
####  irr: Integrated reaction rate file reader
####  vertical_diffusivity: vertical diffusivity (aka kv) file reader
####  height_pressure: height/pressure (aka zp) file reader
#### CMAQ:
####  NetCDFFile: reads all CMAQ IRR, PA, and met data
#### WRF:
####  NetCDFFile: reads all WRF IRR, PA, and met data
#### OTHER:
####  Any 4-d (time/space) data can be used as long as you provide a reader 
####  function for the data.  The reader function must return a NetCDFFile
####  object or a PseudoNetCDF object.  To specify your own reader put a
####  "from package_name import function_name" statement in place of a reader.
files: 
  - [<path to irrfile>, <reader>]

###############################################
###### PA META VARIABLES                 ######
###############################################
#### PA needs the name of variables to be used
#### for the following purposes:
####  shape: name of PA volume shape variable
####         that is a 4-D array of booleans that 
####         include or exclude cells in IRR/IPR
####  init_conc: Initial concentration
####  final_conc: Final concentration
shape: DEFAULT_SHAPE
init_conc: INIT
final_conc: FCONC

###############################################
###### 2-D MASK FOR HORIZONTAL SUBSETTING######
###############################################
#### PA can subset your domain based on a text
#### file with 1s (include) and 0s (excluded)
#### 
#### ascii_mask: path to text file.  If it does
####             not exist, a template is created
#ascii_mask: ascii_mask.txt

###############################################
###### UNIT CONVERSION                   ######
###############################################
#### unitconversion: dictionary of units to 
####      convert.  Each unit to convert has
####      an expression that is evaluated to
####      convert the value to a new unit.
unitconversions:
    ppmV:
        expression: <value>*1000.
        new_unit: ppb
    ppm:
        expression: <value>*1000.
        new_unit: ppb

###############################################
###### PA IRR/IPR VARIABES               ######
###############################################
#### species: list of species names
#### processes: list of process names
#### reactions: list of reaction variables or a
####     regular expression pattern for reaction
####     variable names
species: <list of species names>
processes: <list of process names>
reactions: '(IRR|RXN)_.*'